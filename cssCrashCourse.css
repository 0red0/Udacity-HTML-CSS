/* HTML for css#1 to #29 */

/* 
  <p class="myP1">
      Lorem ipsum dolor sit amet consectetur, adipisicing elit. Nobis nihil
      asperiores error rerum adipisci
   </p>
      <div class="div1">
      links considered as one word. Lorem ipsum dolor sit, amet consectetur
      adipisicing elit. Eius, accusamus, illum provident voluptatem vel quos
      vero sed nesciunt iure saepe ad
      <img src="b1.jpg" alt="scrapples" id="img1" />
      dolores eum autem, officiis nam obcaecati delectus. Debitis, officia.
      Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolor dolorum
      culpa nisi! Dolor nobis reiciendis, possimus, quam optio quos a non
      tempore vel nesciunt consequuntur commodi dolore nam laboriosam similique.
      dolores eum autem, officiis nam obcaecati delectus. Debitis, officia.
      Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolor dolorum
      culpa nisi! Dolor nobis reiciendis, possimus, quam optio quos a non
      tempore vel nesciunt consequuntur commodi dolore nam laboriosam similique.
      </div>
      <!-- <div class="assign-1-shape-1">Normal Div</div>
      <div class="assign-1-shape-2">Normal Div</div>
      <div class="assign-1-shape-3">Normal Div</div>
      <div class="assign-1-shape-4">Normal Div</div> -->
      
      <!-- <span class="ss">
      <div class="s1">shape 1</div>
      <div class="s2">shape 2</div>
      <div class="s3">shape 3</div>
      </span> -->
      
      <span class="">
      <div class="t1">This is important note</div>
      <div class="t2">This is important note</div>
      <div class="t3">This is important note</div>
    </span>
    <div>
      <p class="one">elzero Web school</p>
      <p class="two">elzero Web school</p>
      <p class="three">elzero Web school</p>
      <div>
      <a href="https://elzero.org" id="a1">elzero</a>
      </div>
      </div>
      
      <div class="div4">
      <div class="myP2">Full width</div>
      <div class="clear"></div>
      <div class="myP3">1/3</div>
      <div class="myP3">1/3</div>
      <div class="myP3">1/3</div>
      
      <div class="myP6">1/2</div>
      <div class="myP6">1/2</div>
      
      <div class="myP8">1/4</div>
      <div class="myP8">1/4</div>
      <div class="myP8">1/4</div>
      <div class="myP8">1/4</div>
      </div>
      </body>
      </html> */

/* css#1 to #29 */

* {
	box-sizing: border-box;
}
body {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	background-image: url("b1.jpg");
	background-position: center;
	background-size: contain;
	background-attachment: fixed;
	background-repeat: repeat;
}
.myP1 {
	color: blanchedalmond;
	background-color: violet;
	padding: 55px 0 22px;
	width: 60%;
	margin: auto;
	border-width: 20px;
	border-color: blue;
	border-style: double solid dotted dashed;
	border: 10px solid red;
	border-radius: 7px;
	visibility: visible;
	vertical-align: middle;
	overflow: auto;
	text-shadow: 1px 1px 1px red;
	text-align: center;
	direction: ltr;
	letter-spacing: 2px;
	line-height: 2;
}
.div1 {
	color: blanchedalmond;
	background-color: rgb(105, 30, 105);
	padding: 55px 0 22px;
	width: 60%;
	height: 400px;
	margin: auto;
	border-width: 20px;
	border-color: blue;
	border-style: double solid dotted dashed;
	border: 7px solid rgb(51, 255, 0);
	border-radius: 7px;
	visibility: visible;
	vertical-align: middle;
	overflow: hidden;
	text-overflow: ellipsis;
	text-shadow: 1px 1px 1px red;
	text-align: center;
	direction: ltr;
	letter-spacing: 3px;
	line-height: 3;
	word-spacing: 2px;
	word-break: break-all;
}
/* .assign-1-shape-1 {
    color: aliceblue;
    width: 400px;
    height: 400px;
    margin: auto;
    padding: 20px;
    background-color: #8a2be2;
    background-image: url("https://elzero.org/wp-content/uploads/2021/02/css-assignment-5-8.png");
    background-repeat: no-repeat;
    background-size: 80%;
  }
  .assign-1-shape-2 {
    color: aliceblue;
    width: 400px;
    height: 400px;
    margin: auto;
    padding: 20px;
    background-color: #8a2be2;
    opacity: 0.5;
    background-image: url("https://elzero.org/wp-content/uploads/2021/02/css-assignment-5-8.png");
    background-repeat: repeat-y;
  }
  .assign-1-shape-3 {
    color: aliceblue;
    width: 400px;
    height: 400px;
    margin: auto;
    padding: 20px;
    background-color: #8a2be2;
    background-image: url("https://elzero.org/wp-content/uploads/2021/02/css-assignment-5-8.png");
    background-repeat: no-repeat;
    background-size: 80%;
    background-position: right center;
  }
  .assign-1-shape-4 {
    color: aliceblue;
    width: 400px;
    height: 400px;
    margin: auto;
    padding: 20px;
    background-color: #8a2be2;
    background-image: url("https://elzero.org/wp-content/uploads/2021/02/css-assignment-5-8.png");
    background-position: right bottom;
    background-size: 50%;
    background-repeat: no-repeat;
  } */

/* .ss {
    display: inline;
    padding: 22px;
  }
  .s1 {
    display: inline;
    padding: 22px;
    outline: black;
    border: 5px solid red;
    background-color: #eeee;
  }
  .s2 {
    display: inline;
    padding: 22px;
    background-color: #eeee;
    outline: black;
    border-width: 5px;
    border-style: solid;
    border-color: blue green;
  }
  .s3 {
    display: inline;
    padding: 22px;
    background-color: #eeee;
    outline: black;
    border-width: 5px;
    border-style: dashed;
    border-color: green red blue yellow;
  } */

.t1 {
	width: fit-content;
	margin: 22px;
	padding: 11px;
	background-color: aqua;
	border-left: 11px solid #222222;
	font-size: 66px;
	font-family: "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
	text-shadow: 1px 1px 0 red, 3px 3px 0 violet, 5px 5px 0 blue,
		7px 7px 2px yellow;
}
.t2 {
	margin: 22px;
	padding: 11px;
	background-color: aqua;
	border-left: 11px solid #00001642;
	/* visibility: hidden; */
	display: none;
}
.t3 {
	margin: 22px;
	padding: 11px;
	background-color: #353535;
	border-left: 11px solid #112211;
}
#img1 {
	width: 50px;
	height: 50px;
}

div .one {
	font-family: "Open Sans", "Helvetica Neue", sans-serif;
	font-style: italic;
	font-size: 2.5rem;
	color: aliceblue;
	text-transform: uppercase;
}
div .two {
	font-family: "Segoe UI", Tahoma, Verdana, sans-serif;
	font-weight: 700;
	font-size: 2rem;
	color: aliceblue;
	text-transform: capitalize;
}
div .three {
	font-family: cursive;
	font-weight: 400;
	font-size: 1.5rem;
	color: aliceblue;
	text-transform: lowercase;
}
/* div div {
    border: 5px solid gray;
  } */
div #a1 {
	border: inherit;
	padding: 33px;
	display: block;
	margin: auto;
	width: 44%;
	text-shadow: 0 0 4px white;
	font-size: 66px;
	text-transform: capitalize;
	background-color: #2c5f5091;
	text-decoration: none;
	color: wheat;
	text-align: center;
	border-bottom: 11px solid #353535;
}
.div4 {
	width: 800px;
	color: white;
	text-align: center;
	background-color: chocolate;

	/* margin: 15px; */
	/* padding: 5px; */
}
.clear {
	clear: both;
}

.myP2 {
	color: #112211;
	background-color: aquamarine;
	padding-top: 10px;
	padding-bottom: 10px;
	text-align: center;
	margin: 15px;
	float: left;
	margin-top: 15px;
}
.myP3 {
	color: #112211;
	background-color: aquamarine;
	padding-top: 10px;
	padding-bottom: 10px;
	text-align: center;
	float: left;
	width: calc((800px - 60px) / 3);
	margin-left: 15px;
	margin-top: 15px;
}
.myP6 {
	color: #112211;
	background-color: aquamarine;
	padding-top: 10px;
	padding-bottom: 10px;
	text-align: center;
	float: left;
	width: calc((800px - 45px) / 2);
	margin-left: 15px;
	margin-top: 15px;
}
.myP8 {
	color: #112211;
	background-color: aquamarine;
	padding-top: 10px;
	padding-bottom: 10px;
	text-align: center;
	float: left;
	width: calc((800px - 75px) / 4);
	margin-left: 15px;
	margin-top: 15px;
}

/* css#30 position */

/* <!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Learn JavaScript</title>
    <link rel="stylesheet" href="style.css">
  </head>
  <body>
    <div class="two">two</div>
    <div class="stick">sticky scroll </div>
    <div class="parent">
      <div class="one">one</div>

    </div>
    <script src="script.js"></script>
  </body>
</html> */

/* position
-static => :default-resets all positions-does not accept     values of top...

-relative : moves relative to its first location
-absolute : moves relative to its container or a parent with a relative position

-fixed = fixed position all the time
-sticky =like fixed but sticks on contact not all the time
*/

body {
	min-height: 5000px;
}
div {
	color: white;
	width: 100px;
	padding: 10px;
}
.one {
	background-color: red;
	position: absolute;
}
.two {
	background-color: blue;
}
.parent {
	width: 500px;
	height: 300px;
	background-color: green;
	position: relative;
}
.stick {
	background-color: black;
	position: sticky;
	top: 0;
}

/* 
    <div class="one">one</div>
    <div class="two">two</div>
    <div class="three">three</div>

/* z-index requires positioned elements */

div {
	color: white;
	width: 100px;
	padding: 10px;
	position: absolute;
}
.one {
	background-color: red;
	left: 10px;
	top: 10px;
	z-index: 3;
}
.two {
	background-color: blue;
	left: 20px;
	top: 20px;
	z-index: 2;
}

.three {
	background-color: yellow;
	left: 30px;
	top: 30px;
	z-index: 1;
}

/*  <h3>Title</h3>
    <ul>
      <li>HTML</li>
      <li>CSS</li>
      <li>js
        <ul>
          <li>Reactjs</li>
          <li>nodejs</li>
          <li>vurjs</li>
        </ul>
      </li>
    </ul>
    </div>
   */

/* list-style-type : ul - li - ol */
li {
	background-color: moccasin;
	margin-bottom: 20px;
}
ul {
	list-style: none;
	list-style-position: outside;
	/* bulltes inside  */
	list-style-type: square;
	list-style-image: url("https://freepngimg.com/thumb/star/1-red-star-png-image-thumb.png");
}

/* 
    <table>
      <thead>
        <tr>
          <td>Name</td>
          <td>Age</td>
          <td>Email</td>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td>Osama</td>
          <td>38</td>
          <td>o@nn.sa</td>
        </tr>
        <tr>
          <td>Ahmed</td>
          <td>38</td>
          <td>o@nn.sa</td>
        </tr>
        <tr>
          <td>Mofasa</td>
          <td>38</td>
          <td>o@nn.sa</td>
        </tr>
        <tr>
          <td>Sayed</td>
          <td>38</td>
          <td>o@nn.sa</td>
        </tr>
      </tbody>
    </table>
 */

/* styling tables with css*/

table {
	width: 100%;
	border-spacing: 0px;
}
table td {
	padding: 15px;
	background-color: lightblue;

	border: 1px solid lightgoldenrodyellow;
}
table thead td {
	background-color: red;
	color: #fff;
	text-align: center;
	font-weight: bold;
	border-color: lightgoldenrodyellow;
}

/* 
    <div class="one">Normal Element</div>
    <hr>
    <div class="two"></div>
    <hr>
    <a href="https://google.com">link1</a>
    <a href="https://facebook.com">link2</a>
    <a href="https://dkjff.com">link3</a>
    <a href="https://ggggg.com">link4</a>
    <hr>
    <form action="">
      <div>
        <input type="text" name="" id="in">

      </div>
      <div>
        <input type="checkbox" class="ch">
        <label for="">Testing Check</label>
      </div>
    </form>
    <p class="myp1">Lorem ipsum, dolor sit amet consectetur adipisicing elit. Consequuntur obcaecati ipsam saepe, veritatis doloribus modi temporibus corrupti expedita iste nesciunt numquam omnis provident vitae minus? Nulla cum illum ipsum eveniet?</p>
    <p class="myp2">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Recusandae at ad aliquid libero quo magnam reiciendis harum dolores tempora, impedit ipsam nemo rerum error earum cumque inventore deserunt consectetur. Esse.</p>
    <script src="script.js"></script>
  </body>
</html> */

/* css#34 Pseudo classes */

.one {
	background-color: red;
	color: wheat;
}
.two {
	background-color: #eee;
	width: 100px;
	height: 100px;
}

a {
	color: green;
	text-decoration: none;
}
a:hover {
	color: red;
}
a:visited {
	color: blueviolet;
}

.ch:checked + label {
	color: red;
	/* label color change to red */
}

div:empty {
	border: 5px solid yellowgreen;
}
/* targeting empty elements in the page  */
:empty {
	border: 4px dotted yellow;
}
#in {
	border: 2px solid black;
}

#in:focus {
	border-color: blue;
	outline: none;
}

/* css#35 pseudo elements */

.myp1::first-letter {
	display: inline-block;
	background-color: red;
	color: white;
	font-size: 60px;
	font-weight: bold;
}
.myp2::first-line {
	color: green;
	font-weight: bold;
}

::selection {
	background-color: navy;
	color: yellow;
}

/* <div class="parent">
      <div class="user">O</div>
      <div class="one" data-text="Something">
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum labore
        culpa dolores, autem voluptatum atque, in dolore asperiores facilis
        libero dolorum magni iure doloribus quae pariatur! Similique ipsum nobis
        quos.
      </div>
    </div>
    <div class="parent">
      <div class="user">A</div>
      <div class="one">
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum labore
        culpa dolores, autem voluptatum atque, in dolore asperiores facilis
        libero dolorum magni iure doloribus quae pariatur! Similique ipsum nobis
        quos.
      </div>
    </div>
    <div class="parent">
      <div class="user">E</div>
      <div class="one">
        Lorem ipsum dolor sit amet consectetur adipisicing elit. Laborum labore
        culpa dolores, autem voluptatum atque, in dolore asperiores facilis
        libero dolorum magni iure doloribus quae pariatur! Similique ipsum nobis
        quos.
      </div>
    </div>
    <ul>
      <li>One</li>
      <li>One</li>
      <li>One</li>
      <li>One</li>
      <li>One</li>
    </ul>
  </body> */

/* css#36 ::before ::after pseudo elements */

.parent {
	margin-bottom: 20px;
	overflow: hidden;
}
.one {
	background-color: #eee;
	padding: 10px;
	width: 600px;
	float: left;
	position: relative;
}
.one::after {
	content: "";
	position: absolute;
	background-color: yellowgreen;
	width: 10px;
	height: 100px;
	right: 0;
	top: 0;
}
.one::before {
	content: "";
	position: absolute;
	width: 0;
	height: 0;
	left: -20px;
	top: 50%;
	margin-top: -5px;
	border-width: 10px;
	border-style: solid;
	border-color: transparent green transparent transparent;
}

/* css#37 content counter property on li style  */

/* .parent {
  margin-bottom: 20px;
  overflow: hidden;  use it to force content inside the element
  counter-increment: members-count;
}
.one {
  background-color: #eee;
  padding: 10px;
  width: 600px;
  float: left;
  position: relative;
}
.one::after {
  content: counter(members-count);
  position: absolute;
  background-color: red;
  color: wheat;
  text-align: center;
  width: 20px;
  height: 20px;
  right: -10px;
  top: 50%;
  margin-top: -10px;
}
.one::before {
  content: attr(data-text);
  display: none;
  background-color: blueviolet;
  padding: 13px;
  }
.one:hover::before {
  display: inline-block;
}
ul {
  list-style: none;
}
li {
  position: relative;
  padding-left: 10px;
  margin-bottom: 10px;
}
ul li:before {
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  left: -20px;
  top: 50%;
  margin-top: -5px;
  border-width: 10px;
  border-style: solid;
  border-color: transparent green transparent transparent;
} */

.user {
	background-color: #eee;
	width: 50px;
	margin-right: 20px;
	padding: 10px;
	height: 55.5px;
	float: left;
	font-size: 50px;
	text-align: center;
}

/* css#40 box shadow  */
/* H-shadow | V-shadow | Blur | spread | color | inset */

div {
	padding: 20px;
	background-color: #eee;
	margin: 20px auto;
	width: 300px;
	box-shadow: 0 0 0 0 red, 0 0 10px 1px blue, 0 0 0 0 black inset;
}

/* css Assignment 41 
 */
<div
	class="parent1"
	> <div
	class="child1"
	> <div
	> Basic</div
	> </div
	> <div
	class="clear"
	> </div
	> <div
	class="child2"
	> <div
	> Pro</div
	> </div
	> </div
	> * {
	font-family: Arial, Helvetica, sans-serif;
	box-sizing: border-box;
}
.parent1 {
	width: 550px;
	height: 300px;
	padding: 10px;
	margin: 10px;
	background-color: #eee;
	border: 10px solid white;
	box-shadow: 2px 2px 0 0 blueviolet, -2px -2px 0 0 blueviolet,
		2px -2px 0 0 blueviolet, -2px 2px 0 0 blueviolet;
	position: relative;
}

.parent1::before {
	content: "";
	width: 2px;
	height: 100%;
	background-color: skyblue;
	position: absolute;
	left: 49%;
	top: 0px;
	border-left: 15px solid white;
	border-right: 15px solid white;
}
.parent1::after {
	content: "Or";
	width: auto;
	height: auto;
	padding: 3px;
	border-radius: 50%;
	background-color: skyblue;
	color: white;
	position: absolute;
	top: 50%;
	left: 50%;
	z-index: 3;
}
.child1 div,
.child2 div {
	width: 200px;
	text-align: center;
	font-weight: bold;
	background-color: skyblue;
	padding: 5px 10px;
	border-radius: 5px;
	color: white;
	float: left; /* should of used overflow to force content inside the element*/
}
.child1 div {
	margin-left: 20px;
}

.child2 div {
	margin-left: 85px;
}

/* big circles and their content */

.child1::after {
	text-align: center;
	content: "";
	height: 200px;
	width: 200px;
	background-color: #aaa;
	border-radius: 50%;
	float: left; /* should of used overflow to force content inside the element*/
	position: absolute;
	left: 20px;
	top: 55px;
}
.child2::after {
	text-align: center;
	content: "";
	height: 200px;
	width: 200px;
	background-color: #aaa;
	border-radius: 50%;
	float: right; /* should of used overflow to force content inside the element*/
	position: absolute;
	right: 20px;
	top: 55px;
}
.child1:before {
	content: "Free";
	font-family: Arial, Helvetica, sans-serif;
	font-size: 2rem;
	font-weight: bold;
	position: absolute;
	bottom: 105px;
	left: 90px;
	z-index: 1;
}
.child2:before {
	content: "$30";
	font-size: 2rem;
	font-weight: bold;
	font-family: Arial, Helvetica, sans-serif;
	position: absolute;
	bottom: 105px;
	right: 95px;
	z-index: 1;
}

/* css#42 Transition */

* {
	box-sizing: border-box;
}
div {
	background-color: #ddd;
	width: 200px;
	height: 100px;
	/* transition-duration: 500ms;
  transition-delay: 0.5s;
  transition-property: width;
  transition-timing-function: ease; default */
	/* transition: width 3s linear, height 1s linear; */
	transition: all 0.5s 250ms linear;
	/* transition: properties duration delay function; */
}
div:hover {
	width: 250px;
	height: 130px;
}

/* <div class="parent">
      <div class="one"></div>
      <div class="two">
        <div class="up"></div>
        <div class="down"></div>
      </div>
    </div> */

/* css#44 margin collapse. */

/* Rules: 
    [1] only vertical margins collapse 
    [2] Bigger margin wins 
    [3] Only touching margins collapse
    [4] nesting does not prevent collapsing
     
*/

.parent {
	overflow: hidden; /* use it to force content inside the element*/
	width: 400px;
	height: 200px;
	padding: 10px;
	background-color: #eee;
}

.parent .one,
.parent .two {
	float: left; /* should of used overflow to force content inside the element*/
	width: 50%;
	height: 100%;
}
.one {
	background-color: gray;
}
.two {
	background-color: #aaa;
}
.up {
	background-color: rgb(255, 0, 0);
	width: 200px;
	height: 90px;
	margin-bottom: 40px;
}
.down {
	background-color: green;
	width: 200px;
	height: 90px;
	margin-top: 20px;
}

/* <div class="main">Main div</div>
    <h2>Main Title</h2>
    <p>My Paragraph</p>
    <a href="###">My Link</a>
    <div class="local">Local</div> */

/* css#45 Variables var(--mainVar, fallback value) */

:root {
	/* Global variable */
	--mainColor: yellow;
	--masterPadding: 33px;
}

.main {
	background-color: var(--mainColor, black);
	color: white;
	padding: var(--masterPadding);
}
h2 {
	color: var(--mainColor, black);
	background-color: #eee;
	padding: 20px;
}
p {
	color: var(--mainColor, black);
	border: 2px solid green;
	padding: calc(20px + var(--masterPadding));
}
a:hover {
	color: var(--mainColor, black);
}

.local {
	--mainColor: blueviolet; /*local variable - scope*/
	color: white;
	background-color: var(--mainColor);
}

/* =-=-=-=-=-=-= FLEX BOX =-=-=-=-=-=--=-= */

/* <h2>Flex</h2>
    <div class="flex">
      <div>one</div>
      <div>two</div>
      <div>three</div>
      <div>four</div>
      <div>five</div>
    </div> */

* {
	box-sizing: border-box;
}
.flex {
	background-color: #eee;
	width: 600px;
	min-height: auto;
	padding: 20px;
	border: 1px dotted blue;

	/* css#46 Flex Box :
       these go in the parent or the container element 
       [display:flex,inline-flex / direction / wrap / justify-content(flex-start) / 
       align-items:stretch / align-content:space-between ] 
       */
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-between;

	/* css#48 align-items: stretch is the default; */
	align-items: end;

	/* css#49 align-content: ; shows perfectly with big spaces */
	align-content: space-evenly;
}
.flex div {
	background-color: #f00;
	color: white;
	/* width: 25%; */
	width: calc(90% / 5);
	text-align: center;
	padding: 20px;
}

/* 
from css #50 these go in the flex-child/elements
    flex-grow    0
    flex-shrink  1
    order        0
    flex-basis   auto
    flex         0 1 auto
    align-self   auto
*/

<h2>Flex</h2>
    <div class="flex">
      <div class="one">1</div>
      <div class="two">2</div>
      <div class="three">3</div>
      <div class="four">4</div>
      <div>5</div>
      <div>6</div>
    </div>
    <div class="in">in</div>

/* css#50 Flex Grow / Shrink / Order 
   css#51 flex: [flex:grow] [flex:shrink] [flex-basis]
   default values:   0             1           auto
  
   flex-grow: 0 => default value
   flex-shrink 1 => default value
   order: 0 =>  default value
   flex-basis: auto => default value
   align-self: auto => default value

  - grow, shrink have to do with container width and elements width.
  -any change in those values gives an element priority to grow,     shrink,order.
*/

* {
	box-sizing: border-box;
}
.flex {
	background-color: #eee;
	width: 600px;
	padding: 20px;
	border: 1px dotted blue;
	display: inline-flex;
	/* flex-direction: column; wit flex-basis in its lesson */
}
.flex div {
	background-color: #f00;
	color: white;
	width: 100px;
	text-align: center;
	padding: 20px;
	margin-right: 5px;
	flex-grow: 1; /* =flex: 1; */
	flex-shrink: 1;
}
.three {
	/* will grow faster than others with enough width */
	flex-grow: 4 !important;
}
.four {
	/* will shrink faster in small width and big elements' width */
	flex-shrink: 4 !important;
}
.one {
	order: 6;
}
/* 
you will notice that two2 won't be firs cuz the default value is 0 and it goes right before last element given bigger order.
and the solution is to order the entire elements (I don't know if i can use a loop to give theme order or random order.
 */
.two {
	order: 1;
	/* flex-basis: 300px; = flex:300px; 
      max-width:200px;
  */
	/* helpful more than width with column  */
}

.in {
	display: inline-block;
}

/* ///// css#54 Filters \\\\\\*/

/* <div><img src="code2.jpg" alt="" /></div> */

* {
	box-sizing: border-box;
}
img {
	transition: 0.3s;
	filter: grayscale(1);
	/* filter: blur(3px); */
	/* filter: invert(1); */
}
img:hover {
	filter: grayscale(0);
	/* filter: blur(0); */
	/* filter: invert(0); */
}

/* css#55 color gradient  */

div {
	margin: 20px;
	width: 500px;
	height: 500px;
	background-image: linear-gradient(0deg, #000000f5 1%, red 60%, yellow);
	position: relative;
}
div::before {
	content: "";
	position: absolute;
	top: -10px;
	left: 0;
	width: 100%;
	height: 10px;
	background-color: red;
	background-image: linear-gradient(
		to right,
		blue 20%,
		green 20%,
		green 40%,
		aqua 40%,
		aqua 60%,
		red 60%,
		red 80%,
		black 80%
	);
}

/* <p contenteditable="true">
Lorem ipsum, dolor sit amet consectetur adipisicing elit. Cum quia,
reiciendis iusto minus soluta magnam suscipit sapiente aperiam voluptates
quod voluptatibus laudantium, aliquid numquam consequuntur deserunt
repudiandae autem ab esse.
</p> */

/* css#56 Caret color the flashy |  / pointer events */

* {
	caret-color: yellowgreen;
}
p:hover {
	color: red;
}
p {
	pointer-events: none; like click

	/* stops any events on the elements */
}

/* 
<div class="parent">
      <div>1</div>
      <div>2</div>
      <div>3</div>
      <div>4</div>
      <div>5</div>
      <div>6</div>
      <div>7</div>
      <div>8</div>
      <div>9</div>
    </div>
     */

/* 
     *&*&*&* css#57 Grids *&*&*&*
     *&*&*&* css#58 Grids *&*&*&*
     *&*&*&* css#59 Grids *&*&*&*
     *&*&*&* css#57 Grids *&*&*&*

      _______________
     parent properties:
      ^^^^^^^^^^^^^^^
display:  grid ; inline-grid
grid-template-columns: (px, %, auto, 1fr, minmax(), auto-fit repeat(), mix) 
grid-template-areas: "grid area element names" formation
gap: [row-gap] [column-gap]
justify-content: center;
align-items: end;
align-content: space-around;
*/

* {
	box-sizing: border-box;
}
.parent {
	margin: 20px;
	width: 800px;
	height: 500px;
	background-color: #eee;
	display: grid;
	grid-template-columns: repeat(4, auto);
	grid-template-rows: repeat(3, auto);
	row-gap: 10px;
	column-gap: 11px;
	gap: 10px 10px;
	justify-content: center;
	align-items: end;
	align-content: space-around;
}
.parent div {
	background-color: red;
	color: white;
	padding: 20px;
	font-size: 30px;
	text-align: center;
}

/* 
     *&*&*&* css#61/62 Grids *&*&*&*
      _______________
     children properties:
      ^^^^^^^^^^^^^^^
grid-column: span n
grid-row: start / end
grid-area: row-start / col-start / row-end / col-end;
grid-area: name ;
*/

* {
	box-sizing: border-box;
}
.parent {
	margin: 20px;
	width: 800px;
	height: 500px;
	background-color: #ddd;
	display: grid;
	grid-template-columns: repeat(6, auto);
	gap: 10px 10px;
}
.parent div {
	background-color: red;
	color: white;
	padding: 20px;
	font-size: 30px;
	text-align: center;
}
.child1 {
	grid-column: 1 / 5;
	grid-column: 2 / span 3;
}
.child2 {
	grid-row: 2 / 5;
}
.child3 {
	grid-column: 4 / span 4;
	grid-column: span 2;
}
div .child4 {
	background-color: lime;
	grid-area: 3 / 5 / 6 / 8;
}

/* 
     &*&* css#63 Grids minmax() / auto-fill / auto-fit *&*&
*/

* {
	box-sizing: border-box;
	margin: 0;
}
.parent {
	margin: 20px;
	height: 500px;
	background-color: #ddd;
	display: grid;
	grid-template-columns: minmax(200px, 400px) repeat(2, 500px);
	grid-template-columns: repeat(auto-fill, 200px);
	grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
}
.parent div {
	background-color: red;
	color: white;
	padding: 20px;
	font-size: 30px;
	text-align: center;
}

/* <div class="i">
<img src="https://placekitten.com/200/200/" alt="" />
</div>
<div>Transform</div> */

/* css#65 transform: scale() */
/* css#66 transform: rotate(360deg=1turn=400grad=6.28rad/.75turn) */
/* css#67 transform: translate(-100px, 0 default) */
/* css#68 transform: skew(x , y) */
/* css#68 transform: matrix( scaleX(1), skewX(0), skewY(0), scaleY(1), translateX(0), translateY(0) ) */
/* 
css#70 transform-origin(x,y)
cssUnits [px, em, rem]
transform-origin: 50% 50% 0; defaultValue
transform-origin: right top;

 css#71 3D transform-rotate3D(x,y,z deg)
transform-rotatex(deg)
transform-rotatey(turn)
transform-rotatez(-)

css#72 3D transform: translate3d(0,0,z100px)
perspective: 300px; //distance of the element
*/

div {
	width: 200px;
	height: 200px;
	background-color: rgb(255 0 0 / 39%);
	color: white;
	display: flex;
	justify-content: center;
	align-items: center;
	font-weight: bold;
	font-size: 30px;
	transform: scalex(-1);
	transition: 0.5s;
	/* transform: rotate(-90deg); */
	transform: translate(100px, 10%);
	transform: skewy(0.1turn);
	transform: materix(1.2, 0.2679, 0, 1.2, 20, 20);
}
body .i {
	overflow: hidden;
	width: 200px;
	height: 200px;
}
body .i img {
	transition: 0.5s;
}
body .i:hover img {
	transform: scale(1.3) rotate(-5deg);
	opacity: 0.9;
}
/* 
<div class="container">
      <div class="box">
        <div class="face front">Front</div>
        <div class="face back">Back</div>
      </div>
    </div>
     */

/*css#73 3D backface-visibility 
flip-product effect
 */

* {
	box-sizing: border-box;
	margin: 0;
}
body {
	font-family: Arial, Helvetica, sans-serif;
}
.container {
	margin: 40px;
	width: 200px;
	perspective: 500px;
}
.box {
	position: relative;
	width: 200px;
	height: 200px;
	transform-style: preserve-3d;
	transition: transform 1s;
	transform-origin: right center;
}
.box:hover {
	transform: translateX(-100%) rotateY(180deg);
}
.box .face {
	position: absolute;
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	font-weight: bold;
	font-size: 30px;
	color: #fff;
	backface-visibility: hidden;
}
.box .front {
	background-color: deepskyblue;
}
.box .back {
	background-color: lime;
	transform: rotateY(180deg);
}

/* 
<div>Animation</div>
css#74 Animation */

body {
	font: bolder 33px arial;
}
div {
	background-color: #525174;
	width: 200px;
	height: 200px;
	margin: 100px;
	display: flex;
	justify-content: center;
	align-items: center;
	color: #fff;
	animation-name: move;
	animation-duration: 6s;
}
@keyframes move {
	0% {
		transform: translateX(0%);
	}
	25% {
		transform: translateX(75%);
	}
	50% {
		transform: translateY(-75%) translateX(75%);
	}
	75% {
		transform: translateY(-75%);
	}
	100% {
		transform: translateY(0);
	}
}

/* <div></div>
css#75-#76 animation */

* {
	box-sizing: border-box;
	margin: 0;
}
div {
	width: 100px;
	height: 100px;
	background-color: #eee;
	position: absolute;
	left: 50%;
	top: 50%;
	margin-left: -50px;
	margin-top: -50px;
	border-radius: 50%;
	border: 5px solid #000;
	border-top-color: transparent;

	animation-name: spin;
	animation-duration: 1s;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
	animation-direction: alternate-reverse;
	animation-duration: 1s;
	animation-fill-mode: both;

	/* animation: coloring 3s linear 2s infinite reverse ; shorthand */
}
div:hover {
	animation-play-state: paused;
}
@keyframes spin {
	0% {
		transform: rotate(0);
	}
	100% {
		transform: rotate(360deg);
	}
}

/* css#78-79-80-81-82 Selectors Reference */
-	*	select all elements
-	type Elements [p,div,span,h2] 
- 	all Ps inside this ele with any elements in-between = div p 
- 	.class-name
- 	#id
- 	.parent .child = child element in .parent ele
- 	.class1.class2 = ele with these two classes
- 	element.class-name = like p.myp select only that one
-	.class > .child = only select direct child without eles in-between
- 	ele + ele   select one direct sibling
- 	elem ~ eles 	 select all siblings after elem
- 	[attribute] select with attributes only
- 	ele[attribute]  = div[title]
- 	[attribute="value"]  ele[data="test"] select eles with that attr value ex: input[type="checkbox"]
- 	[attribute ~= "value"] select when contains the whole "value"
- 	[attribute *= "value"] select when contains part of "value"
	[data="test"] >>> [data *= "te"]
- 	[attribute ^= "val"] select when start with a "string" 
- 	:first-child   p:first-child = select f.child if it's a para
- 	:last-child
- 	:first-of-type p:first-of-type
- 	:last-of-type
- 	:only-child  ele that's only child
- 	:not(selector)  select all but the one inside not
- 	:nth-child(n)
- 	:nth-child(n+6) this allows you to pick :nth-child(6) and above
- 	:nth-child(-n+9) this allows you to pick :nth-child(9) and below
- 	nth-child(n+4):nth-child(-n+8) we can select elements within certain ranges, in this case elements 4-8.
- 	nth-child(n+2):nth-child(odd):nth-child(-n+9) we can select elements within certain ranges (2-9) that are odd-numbered children.
- 	:nth-child(3n+1) would normally highlight children 1, 4, 7 & 10, but by using the :nth-child(even) we filter out the odd numbered children 1 & 7 leaving only the children 4 & 10.
- 	:nth-last-child(1) = :last-child
- 	:root
- 	:checked
- 	:empty
- 	:disabled
- 	:required
- 	:focus
- 	::selection  change the selection color
- 	::placeholder   control :placeholder styles

/* css#83-84-85 mediaquaries 
<head>
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="stylesheet" href="print.css" media="print">
<style media="print"> .parent > div {color:red;}</style>
</head>
*/
* {
	box-sizing: border-box;
	margin: 0;
}
.parent {
	display: flex;
	flex-wrap: wrap;
	justify-content: space-evenly;
}
.parent div {
	padding: 20px;
	background-color: red;
	color: white;
	font-size: 20px;
	text-align: center;
	font-weight: bold;
	width: 100%;
	margin-bottom: 5px;
}
/* Mobile */
@media (max-width: 767px) {
}
/* small devices */
@media (min-width: 768px) and (max-width: 991px) {
	.parent div {
		width: calc(50% - 10px);
	}
}
@media (min-width: 992px) {
	.parent div {
		width: calc(33% - 5px);
	}
}
